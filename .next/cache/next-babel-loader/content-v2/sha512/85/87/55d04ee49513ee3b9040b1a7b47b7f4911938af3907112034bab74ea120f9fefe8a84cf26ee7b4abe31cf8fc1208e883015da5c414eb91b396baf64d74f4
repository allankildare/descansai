{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/allan/descansai-ts/descansai-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\allan\\\\descansai-ts\\\\descansai-next\\\\src\\\\components\\\\CountDown\\\\CountDown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { ChallengesContext } from '../../contexts/ChallengeContext';\nimport style from './CountDown.module.css';\nvar countdownTimeout;\nexport function CountDown() {\n  _s();\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountDown() {\n    setIsActive(true);\n  }\n\n  function resetCountDown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.countDownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: style.CountDownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(style.CountDownButton, \" \").concat(style.CountDownButtonActive),\n        onClick: resetCountDown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: style.CountDownButton,\n        onClick: startCountDown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountDown, \"cVu0hsDf1rnm10+qbfS96WIdEJo=\");\n\n_c = CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["C:/Users/allan/descansai-ts/descansai-next/src/components/CountDown/CountDown.tsx"],"names":["useState","useEffect","useContext","ChallengesContext","style","countdownTimeout","CountDown","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountDown","resetCountDown","clearTimeout","setTimeout","countDownContainer","CountDownButton","CountDownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react'\r\nimport { ChallengesContext } from '../../contexts/ChallengeContext'\r\nimport style from './CountDown.module.css'\r\n\r\nlet countdownTimeout: NodeJS.Timeout\r\n\r\nexport function CountDown() {\r\n    const { startNewChallenge } = useContext(ChallengesContext)\r\n    const [time, setTime] = useState(0.1 * 60)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n\r\n    const minutes = Math.floor(time / 60)\r\n    const seconds = time % 60\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('')\r\n    \r\n    function startCountDown() {\r\n        setIsActive(true)\r\n    }\r\n\r\n    function resetCountDown() {\r\n        clearTimeout(countdownTimeout)\r\n        setIsActive(false)\r\n        setTime(0.1 * 60)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isActive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time-1)\r\n            }, 1000)\r\n        } else if(isActive && time === 0) {\r\n            setHasFinished(true)\r\n            setIsActive(false)\r\n            startNewChallenge()\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.countDownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n            { hasFinished ? (\r\n                <button disabled className={style.CountDownButton}>\r\n                    Ciclo encerrado\r\n                </button>\r\n            ) : (\r\n                <>\r\n                {isActive? (\r\n                    <button type=\"button\" className={`${style.CountDownButton} ${style.CountDownButtonActive}`} onClick={resetCountDown}>\r\n                        Abandonar ciclo\r\n                    </button>\r\n                ): (\r\n                    <button type=\"button\" className={style.CountDownButton} onClick={startCountDown}>\r\n                        Iniciar ciclo\r\n                    </button>\r\n                    )\r\n                }\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}